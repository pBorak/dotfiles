#: Fonts

font_family      JetBrainsMono Nerd Font Regular
italic_font      JetBrainsMono Nerd Font Italic
bold_font        JetBrainsMono Nerd Font Bold
bold_italic_font JetBrainsMono Nerd Font ExtraBold Italic

# Font size (in pts)

font_size        13

# disable ligatures when the cursor is over them so they are easier to edit

disable_ligatures always

#: The default shape of the mouse pointer when dragging across text.
#: Valid values are: arrow, beam and hand

pointer_shape_when_dragging hand

# Scrollback
# Number of lines of history to keep in memory for scrolling back

scrollback_lines 10000

# Copy to clipboard on select. With this enabled, simply selecting text with
# the mouse will cause the text to be copied to clipboard. Useful on platforms
# such as macOS/Wayland that do not have the concept of primary selections. Note
# that this is a security risk, as all programs, including websites open in your
# browser can read the contents of the clipboard.
copy_on_select yes

# Hide mouse cursor after the specified number of seconds of the mouse not being used. Set to
# zero to disable mouse cursor hiding.
mouse_hide_wait 0

# Set the active window to the window under the mouse when moving the mouse around
focus_follows_mouse yes

# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell no

# Request window attention on bell.
# Makes the dock icon bounce on macOS or the taskbar flash on linux.
window_alert_on_bell yes

# Window layout
# If enabled, the window size will be remembered so that new instances of kitty will have the same
# size as the previous instance. If disabled, the window will initially have size configured
# by initial_window_width/height, in pixels.
remember_window_size   yes

# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# For a list of available layouts, see the README.
enabled_layouts tall:bias=55;full_size=1,stack,fat,horizontal

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
# Note that borders are displayed only when more than one window is visible. They are meant to separate multiple windows.
window_border_width 1.0

# The window margin (in pts) (blank area outside the border)
window_margin_width 0.0

# The window padding (in pts) (blank area between the text and the window border)
# A single value sets all four sides. Two values set the vertical and horizontal sides.
# Three values set top, horizontal and bottom. Four values set top, right, bottom and left.
window_padding_width 0 0 0 0

# This leads to excess padding on the right but there is no way around that
# short of choosing a different font size that is an exact multiple of the
# cell size
placement_strategy top-left

# The color for the border of the active window
active_border_color #00ff00

# The color for the border of inactive windows
inactive_border_color #ff0000

# The color for the border of inactive windows in which a bell has occurred
bell_border_color #ff5a00

# Fade the text in inactive windows by the specified amount (a number between
# zero and one, with 0 being fully faded).
inactive_text_alpha 0.8

# Tab bar
# Which edge to show the tab bar on, top or bottom
tab_bar_edge bottom
# The separator between tabs in the tab bar
tab_separator "|"
# Tab bar colors and styles
active_tab_foreground #000
active_tab_background #eee
active_tab_font_style bold-italic
inactive_tab_foreground #444
inactive_tab_background #999
inactive_tab_font_style normal

# Color scheme
include ./catppuccin.conf

# Advanced

# The shell program to execute. The default value of . means
# to use whatever shell is set as the default shell for the current user.
# Note that on macOS if you change this, you might need to add --login to
# ensure that the shell starts in interactive mode and reads its startup rc files.
shell .

# Close the window when the child process (shell) exits. If no (the default),
# the terminal will remain open when the child exits as long as there are still
# processes outputting to the terminal (for example disowned or backgrounded
# processes). If yes, the window will close as soon as the child process exits.
# Note that setting it to yes means that any background processes still using
# the terminal can fail silently because their stdout/stderr/stdin no longer
# work.
# close_on_child_death no

# Allow other programs to control kitty. If you turn this on other programs can
# control all aspects of kitty, including sending text to kitty windows,
# opening new windows, closing windows, reading the content of windows, etc.
# Note that this even works over ssh connections.
allow_remote_control yes
listen_on unix:/tmp/mykitty
confirm_os_window_close 2

# The value of the TERM environment variable to set. Changing this can break
# many terminal programs, only change it if you know what you are doing, not
# because you read some advice on Stack Overflow to change it.
term xterm-kitty

# OS specific tweaks
draw_minimal_borders yes

hide_window_decorations yes

# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the background color of the currently active window and finally you can use
# an arbitrary color, such as #12af59 or "red". WARNING: This option works by
# using a hack, as there is no proper Cocoa API for it. It sets the background
# color of the entire window and makes the titlebar transparent. As such it is
# incompatible with background_opacity. If you want to use both, you are
# probably better off just hiding the titlebar with macos_hide_titlebar.
# Match one dark vim title bar background color
macos_titlebar_color system

macos_quit_when_last_window_closed yes
macos_thicken_font 0.3
# Use the option key as an alt key. With this set to no, kitty will use
# the macOS native Option+Key = unicode character behavior. This will
# break any Alt+key keyboard shortcuts in your terminal programs, but you
# can use the macOS unicode input technique.
# macos_option_as_alt yes

# Hide the kitty window from running tasks (alt-tab) on macOS.
# macos_hide_from_tasks no

# Keyboard shortcuts
clear_all_shortcuts yes

# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts.
# kitty_mod ctrl+shift
#
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
#
# You can combine multiple actions to be triggered by a single shortcut, using the
# syntax below:
# map key combine <separator> action1 <separator> action2 <separator> action3 ...
# For example:
# map kitty_mod+e combine : new_window : next_layout
# this will create a new window and switch to the next available layout
#
# You can use multi-key shortcuts using the syntax shown below:
# map key1>key2>key3 action
# For example:
# map ctrl+f>2 set_font_size 20
# this will change the font size to 20 points when you press ctrl+f and then 2

# Clipboard
map cmd+v        paste_from_clipboard
map cmd+c        copy_to_clipboard

# Window management
map kitty_mod+n    new_os_window

# Font sizes
map kitty_mod+equal    increase_font_size
map kitty_mod+minus    decrease_font_size

# Open a currently visible URL using the keyboard. The program used to open the
# URL is specified in open_url_with.
map kitty_mod+e         run_kitten text hints

# Miscellaneous
map kitty_mod+\          toggle_fullscreen
