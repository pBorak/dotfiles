###########################
#  CONFIGURATION
###########################

# tmux prefix key
unbind C-b
set -g prefix C-q
bind C-q send-prefix
# address vim mode switching delay
set -s escape-time 0
# Smart pane switching with awarness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# improve colors
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Keep plenty of history for scrollback
set -g history-limit 10000

# Emacs like tmux command prop keybinds
set -g status-keys 'emacs'
# Copy selection
set -g mouse on
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'
###########################
# STATUS
###########################
set -g status-left-length 40
set -g status-style fg=#c9a8fa,bg=#000000
set -g status-justify left
set -g window-status-current-style fg=#000000,bg=#c9a8fa
# remove administrative debris (session name, hostname, time) in status bar
set -g status-left '[#S] '
set -g status-right " #(date '+%a, %b %d - %I:%M') "
# set refresh interval for status bar
set -g status-interval 30
###########################
# NAVIGATION
###########################
# more intuitive keybindings for splitting
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
set -g base-index 1
set -g renumber-windows on

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 5
bind -n S-Right resize-pane -R 5
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5

# Secondary binding for C-l to retain redraw
bind C-l send-keys 'C-l'
